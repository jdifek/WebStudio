---
interface Service {
  icon: string;
  title: string;
  description: string;
  link: string;
}

interface Props {
  sectionTitle: string;
  sectionSubtitle: string;
  services: Service[];
  ctaText?: string;
  ctaLink?: string;
}

const { sectionTitle, sectionSubtitle, services, ctaText, ctaLink } = Astro.props;
---

<section class="services-section">
  <div class="container">
    <div class="section-header">
      <h2 class="section-title" data-aos="fade-up">{sectionTitle}</h2>
      <p class="section-subtitle" data-aos="fade-up" data-aos-delay="100">{sectionSubtitle}</p>
    </div>
    
    <div class="services-grid">
      {services.map((service, index) => (
        <div class="service-card" data-aos="fade-up" data-aos-delay={100 + (index * 50)}>
          <div class="service-icon">
            <i class={service.icon}></i>
          </div>
          <h3 class="service-title">{service.title}</h3>
          <p class="service-description">{service.description}</p>
          <a href={service.link} class="service-link">
            <span class="link-text">{ctaText || "Learn more"}</span>
            <span class="link-arrow">â†’</span>
          </a>
        </div>
      ))}
    </div>
    
    {ctaText && ctaLink && (
      <div class="services-cta">
        <a href={ctaLink} class="button button-secondary">{ctaText}</a>
      </div>
    )}
  </div>
</section>

<style>
  .services-section {
    padding: 120px 0;
    background-color: var(--color-bg-light);
  }

  .section-header {
    text-align: center;
    max-width: 700px;
    margin: 0 auto 80px;
  }

  .section-title {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    color: var(--color-text-dark);
  }

  .section-subtitle {
    font-size: 1.125rem;
    line-height: 1.6;
    color: var(--color-text-muted);
  }

  .services-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 40px;
    margin-bottom: 60px;
  }

  .service-card {
    background-color: var(--color-white);
    border-radius: 8px;
    padding: 40px;
    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.06);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .service-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 16px 40px rgba(0, 0, 0, 0.1);
  }

  .service-icon {
    font-size: 2.5rem;
    margin-bottom: 24px;
    color: var(--color-primary-500);
  }

  .service-title {
    font-size: 1.5rem;
    margin-bottom: 16px;
    color: var(--color-text-dark);
  }

  .service-description {
    font-size: 1rem;
    line-height: 1.6;
    color: var(--color-text-muted);
    margin-bottom: 24px;
  }

  .service-link {
    display: inline-flex;
    align-items: center;
    font-weight: 500;
    color: var(--color-primary-500);
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .service-link:hover {
    color: var(--color-primary-700);
  }

  .link-arrow {
    margin-left: 8px;
    transition: transform 0.2s ease;
  }

  .service-link:hover .link-arrow {
    transform: translateX(4px);
  }

  .services-cta {
    text-align: center;
    margin-top: 40px;
  }

  @media (max-width: 768px) {
    .services-section {
      padding: 80px 0;
    }
    
    .section-title {
      font-size: 2rem;
    }
    
    .services-grid {
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 24px;
    }
  }
</style>